name: Node.js CI/CD with DAST

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Start containers
        run: docker-compose -f "docker-compose.yml" up

      # - name: Run tests
      #   run: docker container exec app npm test

  SAST-snyk:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
      
      - name: Install and configure SNYK
        run: |
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run SAST scan for lib vulnerabilities
        run: snyk test .

  SAST-njsscan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests_html njsscan
      
      - name: Run NJSScan
        run: njsscan .
        
        
  DAST:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y nmap

      - name: Run DAST with OWASP ZAP
        uses: docker://owasp/zap2docker-weekly:latest
        with:
          args: -c ./zap-full-scan.py -t http://localhost:8080 -r report.html
    env:
          ZAP_PORT: 8080
          ZAP_DAEMON: "true"

  deploy-:
    needs: [build, SAST-snyk]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v4
        with:
          image: c4st4nha/projetosrc
          tag: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

